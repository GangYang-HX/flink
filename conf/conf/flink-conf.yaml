#==============================================================================
#  Common
#==============================================================================

jobmanager.rpc.port: 6123
jobmanager.heap.size: 3072m
taskmanager.heap.size: 30720m
taskmanager.numberOfTaskSlots: 10
taskmanager.memory.preallocate: false
taskmanager.memory.managed.fraction: 0.3f
parallelism.default: 10

#==============================================================================
# pipeline
#==============================================================================
pipeline.use-stream-graph-hasher-v3: true

#==============================================================================
# execution
#==============================================================================
execution.load-based-channel-selector.enabled: true

# Allows informing checkpoint information through the listener.
# If you want to learn more information about this configuration, you can see the following information:
# MR:              https://git.bilibili.co/datacenter/flink/-/merge_requests/1226
#                  https://git.bilibili.co/datacenter/flink/-/merge_requests/1257
# Design document: https://info.bilibili.co/pages/viewpage.action?pageId=544022272
# Test document:   https://info.bilibili.co/pages/viewpage.action?pageId=560785049
execution.checkpointing.listener.enabled: true

# automatically adjust the max parallelism for operators without keyed state when restoring from checkpoint
execution.checkpointing.auto-adjust-max-parallelism: true

#==============================================================================
# Web Frontend
#==============================================================================
jobmanager.web.port: 8081

#==============================================================================
# Streaming state checkpointing
#==============================================================================
#state.backend: filesystem
#state.checkpoint.dir: hdfs://jssz-bigdata-ns1/flink/checkpoints
#state.savepoints.dir: hdfs://jssz-bigdata-ns1/flink/savepoints

#==============================================================================
# Advanced
#==============================================================================

# default restart-strategy
restart-strategy: fixed-delay
restart-strategy.fixed-delay.attempts: 3
restart-strategy.fixed-delay.delay: 10 s
# Enable pipelined region restart strategy
jobmanager.execution.failover-strategy: region

#==============================================================================
# Master High Availability (required configuration)
#==============================================================================

high-availability: org.apache.flink.runtime.highavailability.hybrid.HybridHaServicesFactory
high-availability.zookeeper.quorum: 10.69.190.33:2181,10.69.190.32:2181,10.69.193.42:2181,10.69.193.41,10.69.169.42:2181
high-availability.storageDir: viewfs://jssz-bigdata-cluster/realtime/flink/ha/
high-availability.reconcile.enabled: true
high-availability.zookeeper.client.connection-timeout: 2000
high-availability.zookeeper.client.max-retry-attempts: 0
zookeeper.sasl.disable: true
yarn.application-attempts: 4

metrics.reporters: prom, slf4j, kafkaReporter
metrics.reporter.prom.class: org.apache.flink.metrics.prometheus.PrometheusReporter
metrics.reporter.prom.port: 9250-9280

taskmanager.network.netty.server.numThreads: 200
taskmanager.network.netty.client.numThreads: 200
taskmanager.network.memory.max: 4gb
taskmanager.rpc.port: 50201-50301

taskmanager.network.retries: 5

# as cgroup is set to 10, limit the java gc thread to 10
# env.java.opts: -XX:+UseG1GC -XX:ParallelGCThreads=10 -XX:MaxGCPauseMillis=100
env.java.opts: -XX:+UseG1GC -Dfile.encoding=UTF-8 -Dsun.jnu.encoding=UTF-8

metrics.system-resource: false
metrics.system-resource-probing-interval: 10000
metrics.histogram.add: 95th
metrics.internal.query-service.port: 50100-50200
## New modify sink
metrics.reporter.slf4j.factory.class: com.bilibili.flink.metrics.slf4j.Slf4jJsonReporterFactory
metrics.reporter.slf4j.interval: 60 SECONDS
metrics.reporter.slf4j.metricFilter: taskmanager_Status_JVM_CPU_Load1,taskmanager_Status_JVM_Memory_NonHeap_Used,taskmanager_Status_JVM_Memory_NonHeap_Max,taskmanager_Status_JVM_Memory_Heap_Max,taskmanager_Status_JVM_Memory_Heap_Used,taskmanager_job_task_operator_KafkaConsumer_topic_partition_committedOffsets,taskmanager_job_task_operator_KafkaConsumer_records_consumed_rate,taskmanager_job_task_operator_KafkaConsumer_bytes_consumed_rate,taskmanager_job_task_operator_SinkMetrics_WriteSuccessRecord,taskmanager_job_task_operator_SinkMetrics_WriteSuccessSize,taskmanager_job_task_operator_KafkaConsumer_records_lag_max,taskmanager_job_task_numBytesInLocalPerSecond,taskmanager_job_task_numBytesInRemotePerSecond,taskmanager_job_task_operator_SinkMetrics_RtWriteRecord,taskmanager_job_task_operator_thread_(\\S+)_rt,taskmanager_job_task_operator_thread_(\\S+)_rpcCallbackFailure,taskmanager_job_task_operator_(\\S+)_readrt,taskmanager_job_task_operator_(\\S+)_writert,taskmanager_job_task_operator_KafkaConsumer_topic_partition_currentOffsets,taskmanager_Status_JVM_CPU_Load1UseagePercent,taskmanager_job_task_isBackPressured,taskmanager_Status_JVM_Memory_Direct_MemoryUsed,jobmanager_job_lastCheckpointSize,jobmanager_job_lastCheckpointDuration,taskmanager_job_task_idleTimeMsPerSecond,jobmanager_job_numberOfFailedCheckpoints,taskmanager_Status_cgroup_CgroupCpuThrottle,taskmanager_Status_cgroup_CgroupCpuNrThrottled,taskmanager_Status_cgroup_CgroupCpuNrPeriods,jobmanager_job_numTaskManagers,taskmanager_Status_Network_TotalMemorySegments,taskmanager_Status_Network_AvailableMemorySegments
metrics.reporter.slf4j.labelFilter: job_name,host,subtask_index,topic,partition,task_name,job_owner,queue_name,instance_name,saber_job_name,operator_name,tm_id,operator_id,task_id,job_id

## add kafkaReporter
metrics.reporter.kafkaReporter.factory.class: org.apache.flink.metrics.kafka.KafkaReporterFactory
metrics.reporter.kafkaReporter.interval: 60 SECONDS
metrics.reporter.kafkaReporter.metricFilter: taskmanager_Status_JVM_CPU_Load1,taskmanager_Status_JVM_Memory_NonHeap_Used,taskmanager_Status_JVM_Memory_NonHeap_Max,taskmanager_Status_JVM_Memory_Heap_Max,taskmanager_Status_JVM_Memory_Heap_Used,taskmanager_job_task_operator_KafkaConsumer_topic_partition_committedOffsets,taskmanager_job_task_operator_KafkaConsumer_records_consumed_rate,taskmanager_job_task_operator_KafkaConsumer_bytes_consumed_rate,taskmanager_job_task_operator_SinkMetrics_WriteSuccessRecord,taskmanager_job_task_operator_SinkMetrics_WriteSuccessSize,taskmanager_job_task_operator_KafkaConsumer_records_lag_max,taskmanager_job_task_numBytesInLocalPerSecond,taskmanager_job_task_numBytesInRemotePerSecond,taskmanager_job_task_operator_SinkMetrics_RtWriteRecord,taskmanager_job_task_operator_thread_(\\S+)_rt,taskmanager_job_task_operator_thread_(\\S+)_rpcCallbackFailure,taskmanager_job_task_operator_(\\S+)_readrt,taskmanager_job_task_operator_(\\S+)_writert,taskmanager_job_task_operator_KafkaConsumer_topic_partition_currentOffsets,taskmanager_Status_JVM_CPU_Load1UseagePercent,taskmanager_job_task_isBackPressured,taskmanager_Status_JVM_Memory_Direct_MemoryUsed,jobmanager_job_lastCheckpointSize,jobmanager_job_lastCheckpointDuration,taskmanager_job_task_idleTimeMsPerSecond,jobmanager_job_numberOfFailedCheckpoints,taskmanager_Status_cgroup_CgroupCpuThrottle,taskmanager_Status_cgroup_CgroupCpuNrThrottled,taskmanager_Status_cgroup_CgroupCpuNrPeriods,jobmanager_job_numTaskManagers,taskmanager_Status_Network_TotalMemorySegments,taskmanager_Status_Network_AvailableMemorySegments,taskmanager_Status_JVM_Memory_Direct_TotalCapacity,taskmanager_Status_Flink_Memory_Managed_Total,taskmanager_Status_Flink_Memory_Managed_Used,jobmanager_Status_JVM_CPU_Load1,jobmanager_Status_JVM_CPU_Time,taskmanager_Status_JVM_CPU_Time,jobmanager_Status_JVM_Memory_NonHeap_Used,jobmanager_Status_JVM_Memory_NonHeap_Max,jobmanager_Status_JVM_Memory_Metaspace_Used,jobmanager_Status_JVM_Memory_Metaspace_Max,jobmanager_Status_JVM_Memory_Heap_Used,jobmanager_Status_JVM_Memory_Heap_Max,jobmanager_Status_JVM_Memory_Direct_MemoryUsed,taskmanager_Status_Flink_Memory_Managed_Total\,taskmanager_Status_JVM_Memory_Metaspace_Max,taskmanager_Status_JVM_Memory_Metaspace_Used,taskmanager_Status_Shuffle_Netty_AvailableMemory,taskmanager_Status_Shuffle_Netty_TotalMemory,taskmanager_Status_Shuffle_Netty_UsedMemory,jobmanager_job_jobmanager_memory_process_size,jobmanager_job_jobmanager_vcores,jobmanager_job_taskmanager_memory_process_size,jobmanager_job_taskmanager_vcores
metrics.reporter.kafkaReporter.labelFilter: subtask_index,topic,partition,task_name,operator_name,tm_id,operator_id,task_id,job_id

metrics.reporter.kafkaReporter.bootstrapServersConfig: jssz-lowlevel-pakafka-01.host.bilibili.co:9092,jssz-lowlevel-pakafka-02.host.bilibili.co:9092,jssz-lowlevel-pakafka-03.host.bilibili.co:9092,jssz-lowlevel-pakafka-04.host.bilibili.co:9092,jssz-lowlevel-pakafka-05.host.bilibili.co:9092
metrics.reporter.kafkaReporter.topicName: r_ods.ods_flink_metrics_kafka_rtd
metrics.reporter.kafkaReporter.retries: 3
metrics.reporter.kafkaReporter.acks: 1
metrics.reporter.kafkaReporter.batchSize: 16384
metrics.reporter.kafkaReporter.maxInFlightRequestsPerConnection: 5
metrics.reporter.kafkaReporter.linerMs: 500
metrics.reporter.kafkaReporter.bufferMemory: 33554432
metrics.reporter.kafkaReporter.maxLabelValueLen: 60
metrics.reporter.kafkaReporter.requestTimeoutMs: 30000
metrics.reporter.kafkaReporter.retryBackoffMs: 1000

state.backend.incremental: true
state.backend.rocksdb.timer-service.factory: ROCKSDB
state.backend.rocksdb.predefined-options: FLASH_SSD_OPTIMIZED

state.backend.rocksdb.metrics.block-cache-capacity: true
state.backend.rocksdb.metrics.block-cache-usage: true
state.backend.rocksdb.metrics.cur-size-all-mem-tables: true
state.backend.rocksdb.metrics.mem-table-flush-pending: true
state.backend.rocksdb.metrics.num-running-flushes: true
state.backend.rocksdb.metrics.total-sst-files-size: true

state.backend.rocksdb.checkpoint.transfer.thread.num: 2

akka.ask.timeout: 300 s
web.timeout: 300000

task.kafka_source_idle.interval: 30000
table.exec.source.idle-timeout: 30 s
cluster.evenly-spread-out-slots: true
hadoop.conf.jssz-realyarn-ns.path: /etc/realhdfs
hadoop.conf.jssz-bigdata-ns1.path: /etc/second-hadoop
akka.framesize: 1205725860
metrics.latency.interval: 1000

env.java.opts.jobmanager: "-Dlog4j2.formatMsgNoLookups=true"
env.java.opts.taskmanager: "-Dlog4j2.formatMsgNoLookups=true"
metrics.cgroup-file.path: /sys/fs/cgroup/cpu/hadoop-yarn/{container_id}/cpu.stat

table.exec.async-lookup.buffer-capacity: 400
table.optimizer.source.project.push.down: true
table.optimizer.distinct-agg.split.enabled: true
pipeline.object-reuse: true
state.backend.rocksdb.memory.partitioned-index-filters: true
state.backend.rocksdb.compression.type: lz4

# print stream type
taskmanager.print.stream.type: log

# taishan statebackend
taishan.meta.addresses: jscs-flink-metaserver01-taishan.bilibili.co:7200,jscs-flink-metaserver02-taishan.bilibili.co:7200,jscs-flink-metaserver03-taishan.bilibili.co:7200
